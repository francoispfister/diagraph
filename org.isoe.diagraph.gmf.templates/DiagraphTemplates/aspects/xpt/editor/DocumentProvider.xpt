«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«EXTENSION xpt::editor::Utils»


«AROUND createEditingDomain FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment('DIAGRAPH modified 18')»
	private org.eclipse.emf.transaction.TransactionalEditingDomain createEditingDomain() {
	// TODO: ISOE CHANGE see ITEMIS CHANGE: Use shared editing domain
		//org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = de.itemis.gmf.runtime.editingdomain.SharedEditingDomainUtil.getSharedEditingDomain("«editingDomainID»");
		org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.gmf.runtime.diagram.core.DiagramEditingDomainFactory
				.getInstance().createEditingDomain();
		editingDomain
				.setID("«editingDomainID»");«EXPAND xpt::Common::nonNLS»
		final org.eclipse.emf.transaction.NotificationFilter diagramResourceModifiedFilter = NotificationFilter
				.createNotifierFilter(editingDomain.getResourceSet())
				.and(org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.ADD))
				.and(org.eclipse.emf.transaction.NotificationFilter.createFeatureFilter(org.eclipse.emf.ecore.resource.ResourceSet.class,
						org.eclipse.emf.ecore.resource.ResourceSet.RESOURCE_SET__RESOURCES));
		editingDomain.getResourceSet().eAdapters().add(new org.eclipse.emf.common.notify.Adapter() {

			private org.eclipse.emf.common.notify.Notifier myTarger;

			public org.eclipse.emf.common.notify.Notifier getTarget() {
				return myTarger;
			}

			public boolean isAdapterForType(Object type) {
				return false;
			}

			public void notifyChanged(org.eclipse.emf.common.notify.Notification notification) {
				if (diagramResourceModifiedFilter.matches(notification)) {
					Object value = notification.getNewValue();
					if (value instanceof org.eclipse.emf.ecore.resource.Resource) {
						((org.eclipse.emf.ecore.resource.Resource) value).setTrackingModification(true);
					}
				}
			}

			public void setTarget(org.eclipse.emf.common.notify.Notifier newTarget) {
				myTarger = newTarget;
			}

		});

		return editingDomain;
	}
«ENDAROUND»


«DEFINE createEditingDomain_itemis FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment('DIAGRAPH modified 19')»
private org.eclipse.emf.transaction.TransactionalEditingDomain createEditingDomain() {
	// ITEMIS CHANGE: Use shared editing domain
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = de.itemis.gmf.runtime.editingdomain.SharedEditingDomainUtil.getSharedEditingDomain("«editingDomainID»");;
	/*	
	org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.gmf.runtime.diagram.core.DiagramEditingDomainFactory.getInstance().createEditingDomain();
	editingDomain.setID("«editingDomainID»");«EXPAND xpt::Common::nonNLS»
	final org.eclipse.emf.transaction.NotificationFilter diagramResourceModifiedFilter = org.eclipse.emf.transaction.NotificationFilter.createNotifierFilter(editingDomain.getResourceSet()).and(org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.ADD)).and(org.eclipse.emf.transaction.NotificationFilter.createFeatureFilter(org.eclipse.emf.ecore.resource.ResourceSet.class, org.eclipse.emf.ecore.resource.ResourceSet.RESOURCE_SET__RESOURCES));
	editingDomain.getResourceSet().eAdapters().add(new org.eclipse.emf.common.notify.Adapter() {
		private org.eclipse.emf.common.notify.Notifier myTarger;

		public org.eclipse.emf.common.notify.Notifier getTarget() {
			return myTarger;
		}

		public boolean isAdapterForType(Object type) {
			return false;
		}

		public void notifyChanged(org.eclipse.emf.common.notify.Notification notification) {
			if (diagramResourceModifiedFilter.matches(notification)) {
				Object value = notification.getNewValue();
				if (value instanceof org.eclipse.emf.ecore.resource.Resource) {
					((org.eclipse.emf.ecore.resource.Resource) value).setTrackingModification(true);
				}
			}
		}

		public void setTarget(org.eclipse.emf.common.notify.Notifier newTarget) {
			myTarger = newTarget;
		}
			
	});	
	*/
	return editingDomain;
}
«ENDDEFINE»

